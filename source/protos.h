/*------------------------- Prototypes for games.c --------------------------*/
#ifndef _GAMES_SOURCE
  #define EXTERN extern
#else
  #define EXTERN
#endif
EXTERN struct po_game *get_po_game(char *);
EXTERN struct po_game *create_po_game(void);
EXTERN void destruct_po_game(struct po_game *);
EXTERN struct po_player *create_po_player(struct po_game *);
EXTERN void destruct_po_player(struct po_player *);
EXTERN void shuffle_cards(int[]);
EXTERN void hand_poker(UR_OBJECT);
EXTERN void print_hand(UR_OBJECT,int[]);
EXTERN void room_print_hand(UR_OBJECT,int[]);
EXTERN void start_poker(UR_OBJECT);
EXTERN void join_pokwer(UR_OBJECT);
EXTERN void leave_poker(UR_OBJECT);
EXTERN void list_po_games(UR_OBJECT);
EXTERN int add_player_hist(UR_OBJECT,int,int);
EXTERN int get_player_hist_index(UR_OBJECT);
EXTERN int player_hist_cmp(struct po_player_hist **,struct po_player_hist **);
EXTERN void rank_po(UR_OBJECT);
EXTERN void sort_hist(void);
EXTERN void chips_po(UR_OBJECT);
EXTERN void give_chips_po(UR_OBJECT);
EXTERN int save_hist(void);
EXTERN int load_hist(void);
EXTERN void deal_poker(UR_OBJECT);
EXTERN void next_po_player(struct po_game *);
EXTERN void next_in_player(struct po_game *);
EXTERN void bet_poker(UR_OBJECT);
EXTERN void bet_po_aux(UR_OBJECT,int);
EXTERN void raise_poker(UR_OBJECT,char *);
EXTERN void see_poker(UR_OBJECT);
EXTERN void all_called_check(struct po_game *);
EXTERN void pass_the_deal(struct po_game *);
EXTERN void fold_poker(UR_OBJECT,char *);
EXTERN void check_poker(UR_OBJECT);
EXTERN void bet_message(struct po_game *);
EXTERN void disc_poker(UR_OBJECT);
EXTERN void showdown_poker(struct po_game *);
EXTERN void swap_cards(int[],int,int);
EXTERN void magic_poker(UR_OBJECT);
EXTERN void show_po_players(UR_OBJECT);
EXTERN void check_hist(UR_OBJECT);
EXTERN int myRand(int);
EXTERN void tictac(UR_OBJECT,char *);
EXTERN int legal_tic(char *,int,int);
EXTERN int win_tic(char *);
EXTERN void print_tic(UR_OBJECT);
EXTERN void reset_tictac(UR_OBJECT);
EXTERN void play_hangman(UR_OBJECT);
EXTERN char *get_hang_word(char *);
EXTERN int count_lines(char *);
EXTERN void guess_hangman(UR_OBJECT);
EXTERN void reset_hangman(UR_OBJECT);
#undef EXTERN
/*---------------------- end of games prototypes ----------------------------*/
/*-------------------------- MAIN SOURCE PROTOTYPES -------------------------*/
#ifndef _MAIN_SOURCE
  #define EXTERN extern
#else
  #define EXTERN
#endif
EXTERN int writepidfile(char *,int);
EXTERN void setup_readmask(fd_set *);
EXTERN void accept_connection(int,int);
EXTERN int site_banned(char *);
EXTERN int site_masked(char *);
EXTERN int whosite_banned(char *);
EXTERN int newsite_banned(char *);
EXTERN int user_banned(char *);
EXTERN int get_charclient_line(UR_OBJECT,char *,int);
EXTERN void terminate(char *);
EXTERN int wordfind(char *);
EXTERN void clear_words(void);
EXTERN void load_and_parse_config(void);
EXTERN void parse_init_section(void);
EXTERN void parse_rooms_section(void);
EXTERN int yn_check(char *);
EXTERN int onoff_check(char *);
EXTERN void init_globals(void);
EXTERN void init_signals(void);
EXTERN void sig_handler(int);
EXTERN void init_sockets(void);
EXTERN void write_sock(int sock,char *);
EXTERN void write_user(UR_OBJECT,char *);
EXTERN void write_level(int,int,char *,UR_OBJECT);
EXTERN void write_room(RM_OBJECT,char *);
EXTERN void write_room_except(RM_OBJECT,char *,UR_OBJECT);
EXTERN void write_syslog(char *,int);
EXTERN void write_loginlog(char *,int);
EXTERN void write_arrestrecord(UR_OBJECT,char *,int);
EXTERN void login(UR_OBJECT,char *);
EXTERN void attempts(UR_OBJECT);
EXTERN int load_user_details(UR_OBJECT);
EXTERN int save_extended_user_details(UR_OBJECT);
EXTERN int load_extended_user_details(UR_OBJECT);
EXTERN int save_user_details(UR_OBJECT,int);
EXTERN RM_OBJECT get_room(char *);
EXTERN void connect_user(UR_OBJECT);
EXTERN void disconnect_user(UR_OBJECT);
EXTERN void logoff_user(UR_OBJECT);
EXTERN void echo_off(UR_OBJECT);
EXTERN void echo_on(UR_OBJECT);
EXTERN int misc_ops(UR_OBJECT,char *);
EXTERN void editor(UR_OBJECT,char *);
EXTERN void editor_done(UR_OBJECT);
EXTERN void record(RM_OBJECT,char *);
EXTERN void record_tell(UR_OBJECT,char *);
EXTERN void record_wiz(UR_OBJECT,char *);
EXTERN void record_shout(char *);
EXTERN void reset_access(RM_OBJECT);
EXTERN void boot_exit(int);
EXTERN void prompt(UR_OBJECT);
EXTERN int more(UR_OBJECT,int,char *);
EXTERN void set_date_time(void);
EXTERN char *remove_first(char *);
EXTERN UR_OBJECT get_user(char *);
EXTERN UR_OBJECT get_exact_user(char *);
EXTERN int get_level(char *);
EXTERN int has_room_access(UR_OBJECT,RM_OBJECT);
EXTERN int has_unread_mail(UR_OBJECT);
EXTERN void send_mail(UR_OBJECT,char *,char *);
EXTERN int contains_swearing(char *);
EXTERN int colour_com_count(char *);
EXTERN char *colour_com_strip(char *);
EXTERN char *long_date(int);
EXTERN void clear_revbuff(RM_OBJECT);
EXTERN void clear_shoutrevbuff(void);
EXTERN void clear_wizrevbuff(void);
EXTERN void cls(UR_OBJECT);
EXTERN void showtime(UR_OBJECT);
EXTERN void cls_all(UR_OBJECT);
EXTERN void strtoupper(char *);
EXTERN void strtolower(char *);
EXTERN int isnumber(char *);
EXTERN UR_OBJECT create_user(void);
EXTERN void destruct_user(UR_OBJECT);
EXTERN void destruct_room(RM_OBJECT);
EXTERN RM_OBJECT create_room(void);
EXTERN void destroy_user_clones(UR_OBJECT);
EXTERN void exec_com(UR_OBJECT,char *);
EXTERN struct po_game *get_po_game_here(RM_OBJECT);
EXTERN void say(UR_OBJECT,char *);
EXTERN void shout(UR_OBJECT,char *);
EXTERN void welcome_user(UR_OBJECT,char *);
EXTERN void show_command(UR_OBJECT,char *);
EXTERN void sendtell(UR_OBJECT,char *);
EXTERN void emote(UR_OBJECT,char *);
EXTERN void semote(UR_OBJECT,char *);
EXTERN void pemote(UR_OBJECT,char *);
EXTERN void echo(UR_OBJECT,char *);
EXTERN void to(UR_OBJECT,char *);
EXTERN void toemote(UR_OBJECT,char *);
EXTERN void beep(UR_OBJECT,char *);
EXTERN void think(UR_OBJECT,char *);
EXTERN void linewrap(UR_OBJECT);
EXTERN void force(UR_OBJECT,char *);
EXTERN void doh(UR_OBJECT);
EXTERN void sing(UR_OBJECT,char *);
EXTERN void ssing(UR_OBJECT,char *);
EXTERN void naked(UR_OBJECT,char *);
EXTERN void qecho(UR_OBJECT,char *);
EXTERN void hug(UR_OBJECT);
EXTERN void paddle(UR_OBJECT);
EXTERN void kiss(UR_OBJECT);
EXTERN void streak(UR_OBJECT);
EXTERN void lick(UR_OBJECT);
EXTERN void bop(UR_OBJECT);
EXTERN void frenchkiss(UR_OBJECT);
EXTERN void netsex(UR_OBJECT);
EXTERN void netsextwo(UR_OBJECT);
EXTERN int valid_email(UR_OBJECT,char *);
EXTERN void setmenu(UR_OBJECT);
EXTERN void setinfo(UR_OBJECT,char *);
EXTERN void yell(UR_OBJECT,char *);
EXTERN void show_ranks(UR_OBJECT);
EXTERN void look(UR_OBJECT);
EXTERN void shortlook(UR_OBJECT);
EXTERN void go(UR_OBJECT);
EXTERN void move_user(UR_OBJECT,RM_OBJECT,int);
EXTERN void move(UR_OBJECT);
EXTERN void set_room_access(UR_OBJECT);
EXTERN void uninvite(UR_OBJECT);
EXTERN void letmein(UR_OBJECT);
EXTERN void invite(UR_OBJECT);
EXTERN void set_topic(UR_OBJECT,char *);
EXTERN void rooms(UR_OBJECT,int);
EXTERN void lobby(UR_OBJECT);
EXTERN void join(UR_OBJECT);
EXTERN void toggle_ignall(UR_OBJECT);
EXTERN void listening(UR_OBJECT);
EXTERN void ignoreing(UR_OBJECT);
EXTERN void toggle_mode(UR_OBJECT);
EXTERN void toggle_prompt(UR_OBJECT);
EXTERN void toggle_colour(UR_OBJECT);
EXTERN void print_useage(UR_OBJECT,int);
EXTERN void staff_on(UR_OBJECT);
EXTERN void afk(UR_OBJECT,char *);
EXTERN void account_request(UR_OBJECT,char *);
EXTERN void revclr(UR_OBJECT);
EXTERN void wizrevclr(UR_OBJECT);
EXTERN void shoutrevclr(UR_OBJECT);
EXTERN void review(UR_OBJECT);
EXTERN void revtell(UR_OBJECT);
EXTERN void revwiztell(UR_OBJECT);
EXTERN void revshout(UR_OBJECT);
EXTERN void home(UR_OBJECT);
EXTERN void toggle_charecho(UR_OBJECT);
EXTERN void set_desc(UR_OBJECT,char *);
EXTERN void enter_profile(UR_OBJECT,int);
EXTERN void gender(UR_OBJECT);
EXTERN void map(UR_OBJECT);
EXTERN void drawusermap(UR_OBJECT);
EXTERN void room_desc(UR_OBJECT,int);
EXTERN void set_iophrase(UR_OBJECT,char *);
EXTERN void who(UR_OBJECT,int);
EXTERN void status(UR_OBJECT);
EXTERN void system_details(UR_OBJECT);
EXTERN void examine(UR_OBJECT);
EXTERN void help(UR_OBJECT);
EXTERN void help_commands(UR_OBJECT);
EXTERN void help_nuts(UR_OBJECT);
EXTERN void read_board(UR_OBJECT);
EXTERN void write_board(UR_OBJECT,char *,int);
EXTERN void wipe_board(UR_OBJECT);
EXTERN void search_boards(UR_OBJECT);
EXTERN void rmail(UR_OBJECT);
EXTERN void smail(UR_OBJECT,char *,int);
EXTERN void dmail(UR_OBJECT);
EXTERN void mail_from(UR_OBJECT);
EXTERN void count_messages(UR_OBJECT);
EXTERN void create_clone(UR_OBJECT);
EXTERN void destroy_clone(UR_OBJECT);
EXTERN void myclones(UR_OBJECT);
EXTERN void allclones(UR_OBJECT);
EXTERN void clone_switch(UR_OBJECT);
EXTERN void clone_say(UR_OBJECT,char *);
EXTERN void clone_emote(UR_OBJECT,char *);
EXTERN void clone_hear(UR_OBJECT);
EXTERN void kill_user(UR_OBJECT);
EXTERN void remove_user(UR_OBJECT);
EXTERN void promote(UR_OBJECT);
EXTERN void demote(UR_OBJECT);
EXTERN void listbans(UR_OBJECT);
EXTERN void ban(UR_OBJECT);
EXTERN void ban_site(UR_OBJECT);
EXTERN void ban_new(UR_OBJECT);
EXTERN void ban_mask(UR_OBJECT);
EXTERN void ban_who(UR_OBJECT);
EXTERN void ban_user(UR_OBJECT);
EXTERN void unban(UR_OBJECT);
EXTERN void unban_site(UR_OBJECT);
EXTERN void unban_new(UR_OBJECT);
EXTERN void unban_mask(UR_OBJECT);
EXTERN void unban_who(UR_OBJECT);
EXTERN void unban_user(UR_OBJECT);
EXTERN void visibility(UR_OBJECT,int);
EXTERN void site(UR_OBJECT);
EXTERN void view_record(UR_OBJECT);
EXTERN void wake(UR_OBJECT);
EXTERN void wizshout(UR_OBJECT,char *);
EXTERN void wemote(UR_OBJECT,char *);
EXTERN void bcast(UR_OBJECT,char *);
EXTERN void gag(UR_OBJECT);
EXTERN void muzzle(UR_OBJECT);
EXTERN void unmuzzle(UR_OBJECT);
EXTERN void arrest(UR_OBJECT);
EXTERN void unarrest(UR_OBJECT);
EXTERN void freeze(UR_OBJECT);
EXTERN void unfreeze(UR_OBJECT);
EXTERN void change_pass(UR_OBJECT);
EXTERN void changesys(UR_OBJECT);
EXTERN void logging(UR_OBJECT);
EXTERN void minlogin(UR_OBJECT);
EXTERN void clearline(UR_OBJECT);
EXTERN void change_room_fix(UR_OBJECT,int);
EXTERN void viewloginlog(UR_OBJECT);
EXTERN void viewsyslog(UR_OBJECT);
EXTERN void swban(UR_OBJECT);
EXTERN void suicide(UR_OBJECT);
EXTERN void delete_user(UR_OBJECT,int);
EXTERN void shutdown_com(UR_OBJECT);
EXTERN void reboot_com(UR_OBJECT);
EXTERN void talker_shutdown(UR_OBJECT,char *,int);
EXTERN void do_events(int);
EXTERN void reset_alarm(void);
EXTERN void check_reboot_shutdown(void);
EXTERN void check_idle_and_timeout(void);
EXTERN void check_messages(UR_OBJECT,int);
EXTERN void greet(UR_OBJECT,char *);
EXTERN void add_userlist(char *);
EXTERN void clean_userlist(char *);
EXTERN int in_userlist(char *);
EXTERN void samesite(UR_OBJECT,int);
EXTERN void count_users(void);
EXTERN void pictell(UR_OBJECT,char *);
EXTERN void roompic(UR_OBJECT,char *);
EXTERN void piclist(UR_OBJECT);
EXTERN void viewpic(UR_OBJECT,char *);
EXTERN void makeroom(UR_OBJECT);
EXTERN void giveroom(UR_OBJECT);
EXTERN void rmkill(UR_OBJECT);
EXTERN void rmban(UR_OBJECT);
EXTERN void rmunban(UR_OBJECT);
EXTERN void goto_myroom(UR_OBJECT);
EXTERN void toggle_hidden(UR_OBJECT);
EXTERN void shackle(UR_OBJECT);
EXTERN void unshackle(UR_OBJECT);
EXTERN void makeinvis(UR_OBJECT);
EXTERN void makevis(UR_OBJECT);
EXTERN int show_screen(UR_OBJECT);
EXTERN void show_version(UR_OBJECT);
EXTERN void autopromote(UR_OBJECT);
EXTERN void hopewho(UR_OBJECT);
EXTERN void stairwho(UR_OBJECT);
EXTERN void showpeople(UR_OBJECT,int);
EXTERN void shortwho(UR_OBJECT);
EXTERN void byroom(UR_OBJECT);
EXTERN int inroom(RM_OBJECT);
EXTERN void camwho(UR_OBJECT);
EXTERN void ncohwho(UR_OBJECT);
EXTERN void dcovewho(UR_OBJECT);
EXTERN void setrank(UR_OBJECT,char *);
EXTERN void execall(UR_OBJECT,char *);
EXTERN void atmos_assign(RM_OBJECT);
EXTERN void craps(UR_OBJECT,int);
EXTERN void craps_win(UR_OBJECT);
EXTERN void craps_lose(UR_OBJECT);
EXTERN void craps_getout(UR_OBJECT);
EXTERN void craps_poor(UR_OBJECT);
EXTERN void craps_endgame(UR_OBJECT);
EXTERN void depositbank(UR_OBJECT,int,int);
EXTERN void withdrawlbank(UR_OBJECT,int,int);
EXTERN void givecash(UR_OBJECT);
EXTERN void lendcash(UR_OBJECT);
EXTERN void check_atmospheres(void);
EXTERN int intrand(int max);
EXTERN void edit_atmos(UR_OBJECT,char *);
EXTERN int save_atmospheres(RM_OBJECT);
EXTERN int load_atmospheres(RM_OBJECT);
EXTERN int send_email(char *,char *);
EXTERN int double_fork(void);
EXTERN int backup_talker(void);
EXTERN void force_backup(UR_OBJECT);
EXTERN void ticmenu(UR_OBJECT,char *,int);
EXTERN int file_exists(char *);
EXTERN int filesize(char *);
EXTERN void wait_enter(UR_OBJECT,int);
EXTERN void finger_host(UR_OBJECT);
EXTERN void nslookup(UR_OBJECT);
EXTERN void calender(UR_OBJECT);
EXTERN void tpromote(UR_OBJECT);
EXTERN int do_socials(UR_OBJECT,char *);
EXTERN void list_socials(UR_OBJECT);
EXTERN void quit_user(UR_OBJECT);
EXTERN int confirm(UR_OBJECT,int);
EXTERN void whitespace(char[]);
EXTERN char *center(char *,int);
EXTERN void make_newuser(UR_OBJECT);
EXTERN void finduser(UR_OBJECT);
EXTERN int viewfile(UR_OBJECT,char *);
EXTERN void news(UR_OBJECT);
EXTERN void newswire(UR_OBJECT);
EXTERN void record_lastlog(char *);
EXTERN void lastlogin(UR_OBJECT,int);
EXTERN void clear_lastlog(void);
EXTERN int post_office(UR_OBJECT,char *,char *,char *,char *,int);
EXTERN void make_email(UR_OBJECT,char *,int);
EXTERN void destruct_user_room(UR_OBJECT);
EXTERN void update_time_bank(UR_OBJECT);
EXTERN void icqpage(UR_OBJECT user,char *);
EXTERN void send_icq_page(UR_OBJECT,char *,char *);
EXTERN char *profsub(char *,UR_OBJECT);
EXTERN void addnews(UR_OBJECT,char *,int);
EXTERN int startup_script(UR_OBJECT);
EXTERN int user_online(char *);
EXTERN void sreboot_com(UR_OBJECT);
EXTERN int build_sysinfo(UR_OBJECT);
EXTERN int build_loggedin_users_list(UR_OBJECT);
EXTERN int build_loggedin_users_info(UR_OBJECT);
EXTERN int build_room_info(UR_OBJECT);
EXTERN void do_reboot(UR_OBJECT);
EXTERN void trans_to_quiet(UR_OBJECT,char[]);
EXTERN UR_OBJECT create_user_template(UR_OBJECT);
EXTERN int retrieve_sysinfo(void);
EXTERN void retrieve_rooms(void);
EXTERN void retrieve_users(void);
EXTERN void redo_rooms(void);
EXTERN int possibly_reboot(void);
EXTERN void close_sockets(void);
EXTERN char *emaildomain(char *);
EXTERN void checkbadrooms(void);
EXTERN void ctopic(UR_OBJECT user);
EXTERN void alias(UR_OBJECT user, char *);
EXTERN void blah(UR_OBJECT user);
#undef EXTERN
