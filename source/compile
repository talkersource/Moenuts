#!/bin/sh
#
# Setup some global variables...
# ** Public Release **
#
# What is the name of your talker?
#
talkername="A New Talker"
#
# What do you want your talker executable named? (i.e. moenuts)
#
exec="moenuts"
#
# What is your talker's home directory/folder?
#
execdir="$HOME/moenuts161e"
#
# What is the name of the main source code file?
#
source="moenuts161e.c"
#
# What is the name of your C compiler? (i.e. cc/gcc/egcs)
# Using gcc is recomended!
#
cc="gcc"
#
# What options does your C compiler need when compiling?
#
ccops="-lcrypt -O2 -Wall"
#
# Note: Note.  Some systems, i.e. Redhat and some BSD systems require you
#       include the Crypt Library on the compiler command line using the
#       -lcrypt  command. 
#
# *gdb* Use -DDEBUG to stop the talker from forking (for use with gdb)
#
#
###########################################################################
##    DO NOT MODIFY BEYOND THIS POINT OR YOUR TALKER MAY NOT COMPILE!!    ##
###########################################################################
#
fullinfo=`uname -a`
if [ "$fullinfo" = "" ]; then fullinfo="Not Available"; fi
host=$HOSTNAME
if [ "$host" = "" ]; then host=`hostname`; fi
if [ "$host" = "" ]; then host=`uname -n`; fi
if [ "$host" = "" ]; then host=$HOST; fi
if [ "$host" = "" ]; then host="unknown"; fi
user=$USER
if [ "$user" = "" ]; then user=$LOGNAME; fi
if [ "$user" = "" ]; then user=`logname`; fi
if [ "$user" = "" ]; then user="unknown"; fi
system=`uname -s`
if [ "$machine" = "" ]; then machine=$MACHINE; fi
if [ "$machine" = "" ]; then machine="unknown"; fi
release=`uname -r`
if [ "$release" = "" ]; then release="unknown"; fi
machine=`uname -m`
if [ "$machine" = "" ]; then machine=$MACHINE; fi
if [ "$machine" = "" ]; then machine=$HOSTTYPE; fi
if [ "$machine" = "" ]; then machine=$hosttype; fi
if [ "$machine" = "" ]; then machine="unknown"; fi
timezone=$TZ
if [ "$timezone" = "" ]; then timezone="EST5EDT"; fi
#
# Remove Old hostinfo.h if it exists because we're gonna make a fresh one!
#
rm -f ./hostinfo.h
#
echo "/* Moenuts System Compilation Information */" > hostinfo.h
echo "" >> hostinfo.h
echo "#define COMPILE_BY       \"$user\"" >> hostinfo.h
echo "#define COMPILE_HOST     \"$host\"" >> hostinfo.h
echo "#define COMPILE_OSNAME   \"$system\"" >> hostinfo.h
echo "#define COMPILE_HOSTTYPE \"$machine\"" >> hostinfo.h
echo "#define COMPILE_RELEASE  \"$release\"" >> hostinfo.h
echo "#define COMPILE_DATE     \"`date +%D`\"" >> hostinfo.h
echo "#define COMPILE_TIME     \"`date +%T`\"" >> hostinfo.h
echo "#define COMPILE_FULL     \"$fullinfo\"" >> hostinfo.h
echo "" >> hostinfo.h
clear
echo "-=] Moenuts Compilation Script v1.3, (C)1988-2001 Moesoft (moe@moenuts.com) [=-"
echo ""
echo "Current Host Information..."
echo ""
echo "Account Name : $user  ($user@$host)"
echo "Host Info    : $machine $system $release ($host)"
echo "Date & Time  : `date +%D` at `date +%T`" 
echo "Timezone     : $timezone"
echo ""
#
# Remove Old Executable If It Exists Incase Compile Fails, We'll Have A Recent
# Backup Of The Executable.  Just Named <exec>.old
#
echo "Making Backup Copy Of Old Executable..."
echo "Savnig It As: $execdir/$exec.old..."
rm -f $execdir/$exec.old
mv $execdir/$exec $execdir/$exec.old >& /dev/null
echo "Building $talkername:"
echo "    Compiling $source -=> $execdir/$exec..."
echo ""
echo $cc $execdir/source/$source $ccops -o $execdir/$exec $2 $3 $4 $5
$cc $execdir/source/$source $ccops -o $execdir/$exec $2 $3 $4 $5
echo ""
