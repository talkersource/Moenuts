#!/bin/sh
#
# Setup some global variables...
# ** Public Release **
#
# What is the name of your talker?
#
talkername="New Talker"
#
# What do you want your talker executable named? (i.e. moenuts)
#
exec="moenuts172"
#
# What is your talker's home directory/folder?
#
execdir="$HOME/moenuts172"
#
# What is the name of the main source code file?
#
source="moenuts172.c"
#
# What is the name of your C compiler? (i.e. cc/gcc/egcs)
# Using gcc is recomended!
#
cc="gcc"
#
# What options does your C compiler need when compiling?
#
# Some Valid Options Are:  
#
# -DINCLUDE_CRYPT_H (RedHat) (forces the include of <crypt.h>
# -DDEBUG           Puts Moenuts in Debug Mode (For use w/ gdb, also include -g)
# -DRESOLVE_IP      If you're having problems with your DNS server freezing the talker
# -lcrypt           Include the Crypt Library 
# -Wall             Show ALL warning when compiling.
# -g                Including Debug info for GNU Debugger (use with -DDEBUG)
# -O or -O2 of -O3  Set Optimization Level (Compiler Optimization)
# 
#ccops="-lcrypt -Wall -DDEBUG -g"
ccops="-lcrypt -Wall"

#
# Note: Note.  Some systems, i.e. Redhat and some BSD systems require you
#       include the Crypt Library on the compiler command line using the
#       -lcrypt  command. 
#
# *gdb* Use -DDEBUG to stop the talker from forking (for use with gdb)
#
#
###########################################################################
##    DO NOT MODIFY BEYOND THIS POINT OR YOUR TALKER MAY NOT COMPILE!!    ##
###########################################################################
#
fullinfo=`uname -a`
if [ "$fullinfo" = "" ]; then fullinfo="Not Available"; fi
host=$HOSTNAME
if [ "$host" = "" ]; then host=`hostname`; fi
if [ "$host" = "" ]; then host=`uname -n`; fi
if [ "$host" = "" ]; then host=$HOST; fi
if [ "$host" = "" ]; then host="unknown"; fi
user=$USER
if [ "$user" = "" ]; then user=$LOGNAME; fi
if [ "$user" = "" ]; then user=`logname`; fi
if [ "$user" = "" ]; then user="unknown"; fi
system=`uname -s`
if [ "$machine" = "" ]; then machine=$MACHINE; fi
if [ "$machine" = "" ]; then machine="unknown"; fi
release=`uname -r`
if [ "$release" = "" ]; then release="unknown"; fi
machine=`uname -m`
if [ "$machine" = "" ]; then machine=$MACHINE; fi
if [ "$machine" = "" ]; then machine=$HOSTTYPE; fi
if [ "$machine" = "" ]; then machine=$hosttype; fi
if [ "$machine" = "" ]; then machine="unknown"; fi
timezone=$TZ
if [ "$timezone" = "" ]; then timezone="EST5EDT"; fi
#
# Remove Old hostinfo.h if it exists because we're gonna make a fresh one!
#
rm -f ./hostinfo.h
#
echo "/* Moenuts System Compilation Information */" > hostinfo.h
echo "" >> hostinfo.h
echo "#define COMPILE_BY       \"$user\"" >> hostinfo.h
echo "#define COMPILE_HOST     \"$host\"" >> hostinfo.h
echo "#define COMPILE_OSNAME   \"$system\"" >> hostinfo.h
echo "#define COMPILE_HOSTTYPE \"$machine\"" >> hostinfo.h
echo "#define COMPILE_RELEASE  \"$release\"" >> hostinfo.h
echo "#define COMPILE_DATE     \"`date +%D`\"" >> hostinfo.h
echo "#define COMPILE_TIME     \"`date +%T`\"" >> hostinfo.h
echo "#define COMPILE_FULL     \"$fullinfo\"" >> hostinfo.h
echo "" >> hostinfo.h
clear
echo "-=] Moenuts Compilation Script v1.41, (C)1998-2004 Moe (moe@moenuts.com) [=-"
echo ""
echo "Current Host Information..."
echo ""
echo "Account Name : $user  ($user@$host)"
echo "Host Info    : $machine $system $release ($host)"
echo "Date & Time  : `date +%D` at `date +%T`" 
echo "Timezone     : $timezone"
echo ""
#
# Remove Old Executable If It Exists Incase Compile Fails, We'll Have A Recent
# Backup Of The Executable.  Just Named <exec>.old
#
backupsufix=`date +%m%d%y%H%M%S` >> hostinfo.h
echo "Making Backup Copy Of Old Executable..."
echo "Savnig It As: $execdir/backups/$exec.$backupsufix..."
rm -f $execdir/$exec.old
mv $execdir/$exec $execdir/backups/$exec.$backupsufix >& /dev/null
echo "Building $talkername:"
echo "    Compiling $source -=> $execdir/$exec..."
echo ""
echo $cc $execdir/source/$source $ccops -o $execdir/$exec $2 $3 $4 $5
time $cc $execdir/source/$source $ccops -o $execdir/$exec $2 $3 $4 $5
echo ""
